{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@foskym/flarum-pagination/webpack/bootstrap","webpack://@foskym/flarum-pagination/webpack/runtime/compat get default export","webpack://@foskym/flarum-pagination/webpack/runtime/define property getters","webpack://@foskym/flarum-pagination/webpack/runtime/hasOwnProperty shorthand","webpack://@foskym/flarum-pagination/webpack/runtime/make namespace object","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/app']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/extend']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/app']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/Component']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Button']\"","webpack://@foskym/flarum-pagination/./src/forum/components/Toolbar.tsx","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@foskym/flarum-pagination/./src/forum/index.js","webpack://@foskym/flarum-pagination/./src/forum/addUserPreference.js","webpack://@foskym/flarum-pagination/./src/forum/overrideDiscussionListState.js","webpack://@foskym/flarum-pagination/./src/forum/utils/determineMode.ts","webpack://@foskym/flarum-pagination/./src/forum/overrideDiscussionList.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport type Mithril from 'mithril';\n\nexport default class Toolbar extends Component {\n  attrs: any;\n  view(vnode: Mithril.Vnode) {\n    let state = this.attrs.state;\n    return (\n      <div className=\"Pagination\">\n        <ul class=\"IndexPage-toolbar-view\">\n          <li>{this.buttonFirst()}</li>\n          <li>{this.buttonBack()}</li>\n          {state.ctrl.pageList().map((page: any) => {\n            return (\n              <li>\n                <Button\n                  title={page}\n                  className={state.page().number == page ? 'Button Button--primary Button--active' : 'Button'}\n                  onclick={() => {\n                    state.ctrl.toPage(page);\n                  }}\n                >\n                  {page}\n                </Button>\n              </li>\n            );\n          })}\n          <li>{this.buttonNext()}</li>\n          <li>{this.buttonLast()}</li>\n          <li>{this.inputJump()}</li>\n          <li>{this.buttonJump()}</li>\n        </ul>\n      </div>\n    );\n  }\n\n  buttonFirst() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'First',\n      icon: 'fa fa-angle-double-left fas fa-angles-left',\n      className: 'Button Button--icon',\n      onclick: () => {\n        state.ctrl.toPage(1);\n      },\n      disabled: state.page().number == 1,\n    });\n  }\n\n  buttonBack() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Back',\n      icon: 'fa fa-angle-left fas',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = state.page().number;\n        state.ctrl.toPage(parseInt(page) - 1);\n      },\n      disabled: state.page().number == 1,\n    });\n  }\n\n  buttonNext() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Next',\n      icon: 'fa fa-angle-right fas',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = state.page().number;\n        state.ctrl.toPage(parseInt(page) + 1);\n      },\n      disabled: state.page().number == state.totalPages(),\n    });\n  }\n\n  buttonLast() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Last',\n      icon: 'fa fa-angle-double-right fas fa-angles-right',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = parseInt(state.totalPages());\n        state.ctrl.toPage(page);\n      },\n      disabled: state.page().number == state.totalPages(),\n    });\n  }\n\n  JumpFunc() {\n    let state = this.attrs.state;\n    let input = parseInt(document.getElementById('pagination-inputJump')?.value);\n    if (Number.isFinite(input) && Number.isSafeInteger(input)) {\n      if (input != state.page().number) {\n        if (1 <= input && input <= state.totalPages()) {\n          state.ctrl.toPage(input);\n        }\n      }\n    }\n  }\n\n  inputJump() {\n    let state = this.attrs.state;\n    return m('input.FromControl', {\n      id: 'pagination-inputJump',\n      placeholder: state.page().number === undefined ? '' : `${state.page().number}`,\n      onkeydown: (event: KeyboardEvent) => {\n        event.redraw = false;\n        if (event.keyCode == 13) {\n          event.redraw = true;\n          this.JumpFunc();\n        }\n      },\n    });\n  }\n\n  buttonJump() {\n    return Button.component({\n      title: 'Jump',\n      icon: 'fa fa-paper-plane fas',\n      className: 'Button Button--icon',\n      onclick: this.JumpFunc.bind(this),\n    });\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/common/app';\nimport { extend, override } from 'flarum/common/extend';\n\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\n\nimport addUserPreference from './addUserPreference';\nimport overrideDiscussionListState from './overrideDiscussionListState';\nimport overrideDiscussionList from './overrideDiscussionList';\n\n\napp.initializers.add('foskym/flarum-pagination', () => {\n  addUserPreference();\n  overrideDiscussionListState();\n  overrideDiscussionList();\n\n  extend(DiscussionControls, 'deleteAction', function () {\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      let page = app.discussions.location.page;\n      app.discussions.refresh(page);\n    }\n  });\n\n  extend(DiscussionComposer.prototype, 'onsubmit', function () {\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      // let page = app.discussions.location.page;\n      app.discussions.refresh();\n    }\n  });\n}, -2); // load later to deal with `walsgit-discussion-cards`\n","import app from 'flarum/forum/app';\r\nimport { extend } from 'flarum/common/extend';\r\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\r\nimport FieldSet from 'flarum/common/components/FieldSet';\r\nimport ItemList from 'flarum/common/utils/ItemList';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport Stream from 'flarum/common/utils/Stream';\r\n\r\nexport default function () {\r\n  extend(SettingsPage.prototype, 'oninit', function () {\r\n    const user = this.user;\r\n    const preferences = user.preferences();\r\n    this.userCustom = Stream(preferences['foskym-pagination.userCustom']);\r\n    this.userPaginationOnLoading = Stream(preferences['foskym-pagination.userPaginationOnLoading']);\r\n  });\r\n\r\n  extend(SettingsPage.prototype, 'settingsItems', function (items) {\r\n    if (Boolean(app.forum.attribute('foskym-pagination.canUserPref'))) {\r\n      items.add(\r\n        'pagination_settings',\r\n        FieldSet.component(\r\n          {\r\n            label: app.translator.trans('foskym-pagination.forum.user.settings.head'),\r\n            className: 'SettingsPage-pagination',\r\n          },\r\n          this.Pagination_UserPrefItems().toArray()\r\n        )\r\n      );\r\n    }\r\n  });\r\n\r\n  SettingsPage.prototype['Pagination_UserPrefItems'] = function () {\r\n    const items = new ItemList();\r\n    items.add(\r\n      'foskym-pagination.userCustom',\r\n      Switch.component(\r\n        {\r\n          state: this.user.preferences()['foskym-pagination.userCustom'],\r\n          onchange: (value) => {\r\n            this.UserCustom_Loading = true;\r\n            this.user.savePreferences({ 'foskym-pagination.userCustom': value }).then(() => {\r\n              this.UserCustom_Loading = false;\r\n              m.redraw();\r\n            });\r\n          },\r\n          loading: this.UserCustom_Loading,\r\n        },\r\n        app.translator.trans('foskym-pagination.forum.user.settings.userCustom')\r\n      )\r\n    );\r\n\r\n    if (this.user.preferences()['foskym-pagination.userCustom']) {\r\n      items.add(\r\n        'foskym-pagination.userPaginationOnLoading',\r\n        Switch.component(\r\n          {\r\n            state: this.user.preferences()['foskym-pagination.userPaginationOnLoading'],\r\n            onchange: (value) => {\r\n              this.userPaginationOnLoading_Loading = true;\r\n              this.user.savePreferences({ 'foskym-pagination.userPaginationOnLoading': value }).then(() => {\r\n                this.userPaginationOnLoading_Loading = false;\r\n                m.redraw();\r\n              });\r\n            },\r\n            loading: this.userPaginationOnLoading_Loading,\r\n          },\r\n          app.translator.trans('foskym-pagination.forum.user.settings.userPaginationOnLoading')\r\n        )\r\n      );\r\n    }\r\n\r\n    return items;\r\n  };\r\n}\r\n","import app from 'flarum/common/app';\nimport { override } from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport Stream from 'flarum/common/utils/Stream';\n\nimport determineMode from './utils/determineMode';\n\nexport default function () {\n  DiscussionListState.prototype.initOptions = function () {\n    this.options = {\n      cacheDiscussions: app.forum.attribute('foskym-pagination.cacheDiscussions'),\n      perPage: app.forum.attribute('foskym-pagination.perPage'),\n      perLoadMore: app.forum.attribute('foskym-pagination.perLoadMore'),\n      perIndexInit: app.forum.attribute('foskym-pagination.perIndexInit'),\n      leftEdges: 4,\n      rightEdges: 5,\n    };\n    this.usePaginationMode = determineMode();\n    this.lastTotalDiscussionCount = 0;\n    this.lastTotalPages = 0;\n    this.lastDiscussions = [];\n    this.lastLoadedPage = {};\n    this.lastRequestParams = {};\n\n    this.optionInitialized = true;\n  };\n\n  override(DiscussionListState.prototype, 'refresh', function (original, page = 1) {\n    if (!this.optionInitialized) this.initOptions();\n\n    if (!this.usePaginationMode) {\n      this.pageSize = this.options.perLoadMore;\n      return original(page);\n    }\n\n    this.initialLoading = true;\n    this.loadingPrev = false;\n    this.loadingNext = false;\n\n    this.isRefreshing = true;\n\n    this.clear();\n\n    this.location = { page };\n\n    return this.loadPage(page)\n      .then((results) => {\n        this.pages = [];\n        this.parseResults(this.location.page, results);\n      })\n      .finally(() => {\n        this.initialLoading = false;\n        this.isRefreshing = false;\n      });\n  });\n\n  override(DiscussionListState.prototype, 'loadPage', function (original, page = 1) {\n    const reqParams = this.requestParams();\n    if (!this.optionInitialized) this.initOptions();\n    if (!this.lastRequestParams['include']) {\n      this.lastRequestParams = reqParams;\n    }\n\n    const preloadedDiscussions = app.preloadedApiDocument();\n    if (preloadedDiscussions) {\n      this.initialLoading = false;\n      this.isRefreshing = false;\n      this.totalDiscussionCount = Stream(preloadedDiscussions.payload.jsonapi.totalResultsCount);\n      this.lastTotalDiscussionCount = this.totalDiscussionCount();\n\n      return Promise.resolve(preloadedDiscussions);\n    }\n\n    if (!this.isRefreshing && this.options.cacheDiscussions) {\n      if (\n        JSON.stringify(reqParams['include']) !== JSON.stringify(this.lastRequestParams['include']) ||\n        JSON.stringify(reqParams['filter']) !== JSON.stringify(this.lastRequestParams['filter.q']) ||\n        reqParams['sort'] !== this.lastRequestParams['sort']\n      ) {\n        if (this.lastLoadedPage[page]) {\n          let start = this.options.perPage * (page - 1);\n          let end = this.options.perPage * page;\n          let results = this.lastDiscussions.slice(start, end);\n          results.payload = { jsonapi: { totalResultsCount: this.totalDiscussionCount() } };\n\n          // for `walsgit/flarum-discussion-cards`\n          // if resolve at first, the card items would not redraw at `cache mode`.\n          this.initialLoading = true;\n          m.redraw();\n          return new Promise((resolve) => setTimeout(() => resolve(results), 50));\n\n          return Promise.resolve(results);\n        }\n      }\n    }\n\n    const include = Array.isArray(reqParams.include) ? reqParams.include.join(',') : reqParams.include;\n\n    let newOffset, newLimit;\n\n    if (this.usePaginationMode) {\n      newOffset = this.options.perPage * (page - 1);\n      newLimit = this.options.perPage;\n    } else {\n      newOffset = this.options.perIndexInit * Math.min(page - 1, 1) + this.options.perLoadMore * Math.max(page - 2, 0);\n      newLimit = newOffset == 0 ? this.options.perIndexInit : this.options.perLoadMore;\n    }\n\n    const params = {\n      ...reqParams,\n      page: {\n        ...reqParams.page,\n        offset: newOffset,\n        limit: newLimit,\n      },\n      include,\n    };\n\n    return app.store.find(this.type, params);\n  });\n\n\n  // for `walsgit-discussion-cards`, might cause other extensions error?\n  override(DiscussionListState.prototype, 'getAllItems', function(original) {\n    if (!'walsgit-discussion-cards' in flarum.extensions) return original();\n\n    return this.extraDiscussions.concat(\n      this.getPages(true)\n        .map((pg) => pg.items)\n        .flat()\n    );\n  })\n\n  // for `walsgit-discussion-cards`, might cause other extensions error?\n  override(DiscussionListState.prototype, 'getPages', function(original, getAllPages = false) {\n    const allPages = original();\n    if (!'walsgit-discussion-cards' in flarum.extensions) return allPages;\n\n    if (getAllPages) return allPages;\n    return [allPages.find((page) => page.number === this.location.page)]\n  })\n\n  override(DiscussionListState.prototype, 'parseResults', function (original, pg, results) {\n    if (!this.usePaginationMode) {\n      return original(pg, results);\n    }\n    const pageNum = Number(pg);\n\n    const links = results.payload?.links || {};\n\n    const page = {\n      number: pageNum,\n      items: results,\n      hasNext: !!links?.next,\n      hasPrev: !!links?.prev,\n    };\n\n    this.hasPage = function (page) {\n      let allPages = this.getPages(true);\n      if (allPages.length == 0) return false;\n      for (let i = 0; i < allPages.length; i++) {\n        if (allPages[i].number == page) return true;\n      }\n      return false;\n    };\n\n    if (!this.hasPage(pageNum)) {\n      this.pages.push(page);\n    }\n\n    this.pages = this.pages.sort((a, b) => a.number - b.number)\n\n    this.location = { page: pageNum };\n\n    this.totalDiscussionCount = Stream(results.payload.jsonapi.totalResultsCount);\n\n    if (this.options.cacheDiscussions) {\n      if (\n        (this.lastTotalDiscussionCount != this.totalDiscussionCount() && this.lastTotalDiscussionCount != 0) ||\n        this.lastTotalDiscussionCount === 0 ||\n        this.isRefreshing\n      ) {\n        // need to update the discussion list\n        this.lastTotalDiscussionCount = this.totalDiscussionCount();\n        for (let i = 0; i < this.lastTotalDiscussionCount; i++) {\n          this.lastDiscussions[i] = {};\n        }\n        this.lastLoadedPage = {};\n      } else {\n        // no need to update the discussion list\n        this.lastLoadedPage[pageNum] = page;\n        let start = this.options.perPage * (pageNum - 1);\n        let end = this.options.perPage * pageNum;\n        this.lastDiscussions.splice(start, end - start, ...results);\n      }\n    }\n\n    this.getTotalPages = function () {\n      return Math.ceil(this.totalDiscussionCount() / this.options.perPage);\n    };\n\n    this.page = Stream(page);\n    this.perPage = Stream(this.options.perPage);\n    this.totalPages = Stream(this.getTotalPages());\n\n    this.ctrl = {\n      prevPage: function () {\n        let current = this.page().number;\n        --current;\n\n        if (current < 1) {\n          return;\n        }\n\n        this.page(current);\n        let next = current;\n        this.loadingPrev = true;\n        this.loadPage(next).then((results) => {\n          this.parseResults(next, results);\n          this.loadingPrev = false;\n        });\n      }.bind(this),\n\n      nextPage: function () {\n        let current = this.page().number;\n        ++current;\n\n        if (current > this.totalPages()) {\n          current = this.totalPages();\n          return;\n        }\n\n        this.page(current);\n        let next = current;\n        this.loadingNext = true;\n        this.loadPage(next).then((results) => {\n          this.parseResults(next, results);\n          this.loadingNext = false;\n        });\n      }.bind(this),\n\n      toPage: function (page) {\n        if (this.page().number == Number(page) || page < 1 || page > this.totalPages()) return;\n\n        this.page(Number(page));\n        let next = Number(page);\n\n        this.initialLoading = true;\n\n        this.loadPage(next).then((results) => {\n          this.parseResults(next, results);\n          this.initialLoading = false;\n        });\n      }.bind(this),\n\n      pageList: function () {\n        let p = [],\n          left = Math.max(parseInt(this.page().number) - this.options.leftEdges, 1),\n          right = Math.min(parseInt(this.page().number) + this.options.rightEdges, this.totalPages());\n\n        for (let i = left; i <= right; i++) {\n          p.push(i);\n        }\n\n        return p;\n      }.bind(this),\n    };\n\n    m.redraw();\n  });\n\n  override(DiscussionListState.prototype, 'addDiscussion', function (original, discussion) {\n    if (!this.usePaginationMode) {\n      return original();\n    }\n    const index = this.lastDiscussions.indexOf(discussion);\n\n    if (index !== -1) {\n      this.lastDiscussions.splice(index);\n      this.lastDiscussions.unshift(discussion);\n    } else {\n      this.lastDiscussions.unshift(discussion);\n      this.lastTotalDiscussionCount++;\n      this.totalDiscussionCount(this.lastTotalDiscussionCount);\n    }\n\n    m.redraw();\n  });\n\n  override(DiscussionListState.prototype, 'deleteDiscussion', function (original, discussion) {\n    if (!this.usePaginationMode) {\n      return original();\n    }\n    const index = this.lastDiscussions.indexOf(discussion);\n\n    if (index !== -1) {\n      this.lastDiscussions.splice(index);\n      this.lastTotalDiscussionCount--;\n      this.totalDiscussionCount(this.lastTotalDiscussionCount);\n    }\n\n    m.redraw();\n  });\n\n  override(DiscussionListState.prototype, 'clear', function (original) {\n    if (!this.usePaginationMode) {\n      return original();\n    }\n    this.lastDiscussions = [];\n    this.lastLoadedPage = {};\n    this.lastRequestParams = {};\n    this.lastTotalDiscussionCount = 0;\n    this.lastTotalPages = 0;\n    this.totalDiscussionCount = Stream(0);\n    return original();\n  });\n}\n","import app from 'flarum/forum/app';\r\n\r\nexport default function () {\r\n  if (app.session.user === null) {\r\n    return app.forum.attribute('foskym-pagination.paginationOnLoading');\r\n  }\r\n\r\n  const preferences = app.session.user.preferences() as any;\r\n\r\n  if (app.forum.attribute('foskym-pagination.canUserPref')) {\r\n    if (!preferences['foskym-pagination.userCustom']) {\r\n      return app.forum.attribute('foskym-pagination.paginationOnLoading');\r\n    } else {\r\n      if (!preferences['foskym-pagination.userPaginationOnLoading']) {\r\n        return false;\r\n      }\r\n    }\r\n  } else {\r\n    return app.forum.attribute('foskym-pagination.paginationOnLoading');\r\n  }\r\n\r\n  return true;\r\n}\r\n","import app from 'flarum/common/app';\nimport { override } from 'flarum/common/extend';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport Toolbar from './components/Toolbar';\n\nexport default function () {\n  override(DiscussionList.prototype, 'view', function (original) {\n    const state = this.attrs.state;\n\n    if (!state.usePaginationMode) {\n      return original();\n    }\n\n    const params = state.getParams();\n    const isLoading = state.isLoading();\n\n    if (state.isEmpty()) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      return (\n        <div className=\"DiscussionList\">\n          <Placeholder text={text} />\n        </div>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <div className={classList('DiscussionList', { 'DiscussionList--searchResults': state.isSearchResults() })}>\n          <ul role=\"feed\" aria-busy={isLoading} className=\"DiscussionList-discussions\"></ul>\n          <div className=\"DiscussionList-loadMore\">\n            <LoadingIndicator />\n          </div>\n        </div>\n      );\n    }\n\n    const pages = state.getPages();\n    let items = [];\n\n    for (let index = 0; index < pages.length; index++) {\n      const page = pages[index];\n      if (page.number == state.location.page) {\n        items = page.items;\n        break;\n      }\n    }\n\n    const position = app.forum.attribute('foskym-pagination.paginationPosition');\n    const pageSize = state.options.perPage;\n    const pageNum = state.page;\n\n    let discussionList = (\n      <ul role=\"feed\" aria-busy={isLoading} className=\"DiscussionList-discussions\">\n        {items.map((discussion, itemNum) => (\n          <li key={discussion.id()} data-id={discussion.id()} role=\"article\" aria-setsize=\"-1\" aria-posinset={pageNum * pageSize + itemNum}>\n            <DiscussionListItem discussion={discussion} params={params} />\n          </li>\n        ))}\n      </ul>\n    );\n\n    // for `walsgit-discussion-cards`, is there any better solution?\n    const cardSupport = 'walsgit-discussion-cards' in flarum.extensions;\n    if (cardSupport) {\n      const tree = original();\n      if (tree.children.length >= 2) tree.children = tree.children.slice(0, 1);\n      discussionList = tree;\n    }\n\n    return (\n      <div className={classList('DiscussionList', { 'DiscussionList--searchResults': state.isSearchResults() })}>\n        {position == 'above' || position == 'both' ? Toolbar.component({ state }) : ''}\n          {discussionList}\n        {position == 'under' || position == 'both' ? Toolbar.component({ state }) : ''}\n      </div>\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_extends","assign","bind","target","i","arguments","length","source","apply","this","_setPrototypeOf","p","setPrototypeOf","__proto__","Toolbar","subClass","superClass","attrs","create","constructor","view","vnode","state","className","class","buttonFirst","buttonBack","ctrl","pageList","map","page","title","number","onclick","toPage","buttonNext","buttonLast","inputJump","buttonJump","Button","icon","disabled","parseInt","totalPages","JumpFunc","input","document","getElementById","Number","isFinite","isSafeInteger","m","id","placeholder","undefined","onkeydown","event","redraw","keyCode","Component","app","extend","SettingsPage","preferences","user","userCustom","Stream","userPaginationOnLoading","items","Boolean","add","FieldSet","label","Pagination_UserPrefItems","toArray","ItemList","Switch","onchange","UserCustom_Loading","savePreferences","then","loading","userPaginationOnLoading_Loading","DiscussionListState","options","cacheDiscussions","perPage","perLoadMore","perIndexInit","leftEdges","rightEdges","usePaginationMode","determineMode","lastTotalDiscussionCount","lastTotalPages","lastDiscussions","lastLoadedPage","lastRequestParams","optionInitialized","override","original","initOptions","initialLoading","loadingPrev","loadingNext","isRefreshing","clear","location","loadPage","results","pages","parseResults","pageSize","reqParams","requestParams","preloadedDiscussions","totalDiscussionCount","payload","jsonapi","totalResultsCount","Promise","resolve","JSON","stringify","start","end","slice","setTimeout","newOffset","newLimit","include","Array","isArray","join","Math","min","max","params","offset","limit","type","extensions","extraDiscussions","concat","getPages","pg","flat","getAllPages","allPages","find","pageNum","links","hasNext","next","hasPrev","prev","hasPage","push","sort","b","splice","getTotalPages","ceil","prevPage","current","nextPage","left","right","discussion","index","indexOf","unshift","DiscussionList","getParams","isLoading","isEmpty","text","classList","isSearchResults","role","position","discussionList","itemNum","tree","children","component","DiscussionControls","DiscussionComposer"],"sourceRoot":""}