{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@foskym/flarum-pagination/webpack/bootstrap","webpack://@foskym/flarum-pagination/webpack/runtime/compat get default export","webpack://@foskym/flarum-pagination/webpack/runtime/define property getters","webpack://@foskym/flarum-pagination/webpack/runtime/hasOwnProperty shorthand","webpack://@foskym/flarum-pagination/webpack/runtime/make namespace object","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/app']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/extend']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/app']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/Component']\"","webpack://@foskym/flarum-pagination/external root \"flarum.core.compat['common/components/Button']\"","webpack://@foskym/flarum-pagination/./src/forum/components/Toolbar.tsx","webpack://@foskym/flarum-pagination/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@foskym/flarum-pagination/./src/forum/index.js","webpack://@foskym/flarum-pagination/./src/forum/addUserPreference.js","webpack://@foskym/flarum-pagination/./src/forum/overrideDiscussionListState.js","webpack://@foskym/flarum-pagination/./src/forum/utils/determineMode.ts","webpack://@foskym/flarum-pagination/./src/forum/overrideDiscussionList.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport type Mithril from 'mithril';\n\nexport default class Toolbar extends Component {\n  attrs: any;\n  view(vnode: Mithril.Vnode) {\n    let state = this.attrs.state;\n    return (\n      <div className=\"Pagination\">\n        <ul class=\"IndexPage-toolbar-view\">\n          <li>{this.buttonFirst()}</li>\n          <li>{this.buttonBack()}</li>\n          {state.ctrl.pageList().map((page: any) => {\n            return (\n              <li>\n                <Button\n                  title={page}\n                  className={state.page().number == page ? 'Button Button--primary Button--active' : 'Button'}\n                  onclick={() => {\n                    state.ctrl.toPage(page);\n                  }}\n                >\n                  {page}\n                </Button>\n              </li>\n            );\n          })}\n          <li>{this.buttonNext()}</li>\n          <li>{this.buttonLast()}</li>\n          <li>{this.inputJump()}</li>\n          <li>{this.buttonJump()}</li>\n        </ul>\n      </div>\n    );\n  }\n\n  buttonFirst() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'First',\n      icon: 'fa fa-angle-double-left fas fa-angles-left',\n      className: 'Button Button--icon',\n      onclick: () => {\n        state.ctrl.toPage(1);\n      },\n      disabled: state.page().number == 1,\n    });\n  }\n\n  buttonBack() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Back',\n      icon: 'fa fa-angle-left fas',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = state.page().number;\n        state.ctrl.toPage(parseInt(page) - 1);\n      },\n      disabled: state.page().number == 1,\n    });\n  }\n\n  buttonNext() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Next',\n      icon: 'fa fa-angle-right fas',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = state.page().number;\n        state.ctrl.toPage(parseInt(page) + 1);\n      },\n      disabled: state.page().number == state.totalPages(),\n    });\n  }\n\n  buttonLast() {\n    let state = this.attrs.state;\n    return Button.component({\n      title: 'Last',\n      icon: 'fa fa-angle-double-right fas fa-angles-right',\n      className: 'Button Button--icon',\n      onclick: () => {\n        let page = parseInt(state.totalPages());\n        state.ctrl.toPage(page);\n      },\n      disabled: state.page().number == state.totalPages(),\n    });\n  }\n\n  JumpFunc() {\n    let state = this.attrs.state;\n    let input = parseInt(document.getElementById('pagination-inputJump')?.value);\n    if (Number.isFinite(input) && Number.isSafeInteger(input)) {\n      if (input != state.page().number) {\n        if (1 <= input && input <= state.totalPages()) {\n          state.ctrl.toPage(input);\n        }\n      }\n    }\n  }\n\n  inputJump() {\n    let state = this.attrs.state;\n    return m('input.FromControl', {\n      id: 'pagination-inputJump',\n      placeholder: state.page().number === undefined ? '' : `${state.page().number}`,\n      onkeydown: (event: KeyboardEvent) => {\n        event.redraw = false;\n        if (event.keyCode == 13) {\n          event.redraw = true;\n          this.JumpFunc();\n        }\n      },\n    });\n  }\n\n  buttonJump() {\n    return Button.component({\n      title: 'Jump',\n      icon: 'fa fa-paper-plane fas',\n      className: 'Button Button--icon',\n      onclick: this.JumpFunc.bind(this),\n    });\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/common/app';\nimport { extend, override } from 'flarum/common/extend';\n\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\n\nimport addUserPreference from './addUserPreference';\nimport overrideDiscussionListState from './overrideDiscussionListState';\nimport overrideDiscussionList from './overrideDiscussionList';\n\n\napp.initializers.add('foskym/flarum-pagination', () => {\n  addUserPreference();\n  overrideDiscussionListState();\n  overrideDiscussionList();\n\n  extend(DiscussionControls, 'deleteAction', function () {\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      let page = app.discussions.location.page;\n      app.discussions.refresh(page);\n    }\n  });\n\n  extend(DiscussionComposer.prototype, 'onsubmit', function () {\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      // let page = app.discussions.location.page;\n      app.discussions.refresh();\n    }\n  });\n}, -2); // load later to deal with `walsgit-discussion-cards`\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'oninit', function () {\n    const user = this.user;\n    const preferences = user.preferences();\n    this.userCustom = Stream(preferences['foskym-pagination.userCustom']);\n    this.userPaginationOnLoading = Stream(preferences['foskym-pagination.userPaginationOnLoading']);\n  });\n\n  extend(SettingsPage.prototype, 'settingsItems', function (items) {\n    if (Boolean(app.forum.attribute('foskym-pagination.canUserPref'))) {\n      items.add(\n        'pagination_settings',\n        FieldSet.component(\n          {\n            label: app.translator.trans('foskym-pagination.forum.user.settings.head'),\n            className: 'SettingsPage-pagination',\n          },\n          this.Pagination_UserPrefItems().toArray()\n        )\n      );\n    }\n  });\n\n  SettingsPage.prototype['Pagination_UserPrefItems'] = function () {\n    const items = new ItemList();\n    items.add(\n      'foskym-pagination.userCustom',\n      Switch.component(\n        {\n          state: this.user.preferences()['foskym-pagination.userCustom'],\n          onchange: (value) => {\n            this.UserCustom_Loading = true;\n            this.user.savePreferences({ 'foskym-pagination.userCustom': value }).then(() => {\n              this.UserCustom_Loading = false;\n              m.redraw();\n            });\n          },\n          loading: this.UserCustom_Loading,\n        },\n        app.translator.trans('foskym-pagination.forum.user.settings.userCustom')\n      )\n    );\n\n    if (this.user.preferences()['foskym-pagination.userCustom']) {\n      items.add(\n        'foskym-pagination.userPaginationOnLoading',\n        Switch.component(\n          {\n            state: this.user.preferences()['foskym-pagination.userPaginationOnLoading'],\n            onchange: (value) => {\n              this.userPaginationOnLoading_Loading = true;\n              this.user.savePreferences({ 'foskym-pagination.userPaginationOnLoading': value }).then(() => {\n                this.userPaginationOnLoading_Loading = false;\n                m.redraw();\n              });\n            },\n            loading: this.userPaginationOnLoading_Loading,\n          },\n          app.translator.trans('foskym-pagination.forum.user.settings.userPaginationOnLoading')\n        )\n      );\n    }\n\n    return items;\n  };\n}\n","import app from 'flarum/common/app';\nimport { override } from 'flarum/common/extend';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport Stream from 'flarum/common/utils/Stream';\n\nimport determineMode from './utils/determineMode';\n\n/**\n * 最小修补：\n * - 修正 `!'ext' in obj` 的括号优先级（两处）\n * - 修正 filter 对比键名（filter vs filter.q）\n * - 清理不可达 return\n * - 在分页模式下把 refreshParams → refresh() 串起来，确保 Realtime 的“黄条触发”能刷新当前页\n */\nexport default function () {\n  // 初始化分页选项\n  DiscussionListState.prototype.initOptions = function () {\n    this.options = {\n      cacheDiscussions: app.forum.attribute('foskym-pagination.cacheDiscussions'),\n      perPage: app.forum.attribute('foskym-pagination.perPage'),\n      perLoadMore: app.forum.attribute('foskym-pagination.perLoadMore'),\n      perIndexInit: app.forum.attribute('foskym-pagination.perIndexInit'),\n      leftEdges: 4,\n      rightEdges: 5,\n    };\n    this.usePaginationMode = determineMode();\n    this.lastTotalDiscussionCount = 0;\n    this.lastTotalPages = 0;\n    this.lastDiscussions = [];\n    this.lastLoadedPage = {};\n    this.lastRequestParams = {};\n    this.optionInitialized = true;\n  };\n\n  // 关键：把 refreshParams 串到 refresh，确保 Realtime 触发能刷新分页\n  override(DiscussionListState.prototype, 'refreshParams', function (original, params, page = this.location?.page ?? 1) {\n    const ret = original(params, page);\n    if (this.usePaginationMode && typeof this.refresh === 'function') {\n      return Promise.resolve(ret).then(() => this.refresh(page));\n    }\n    return ret;\n  });\n\n  // 刷新当前页\n  override(DiscussionListState.prototype, 'refresh', function (original, page = 1) {\n    if (!this.optionInitialized) this.initOptions();\n\n    if (!this.usePaginationMode) {\n      this.pageSize = this.options.perLoadMore;\n      return original(page);\n    }\n\n    this.initialLoading = true;\n    this.loadingPrev = false;\n    this.loadingNext = false;\n    this.isRefreshing = true;\n\n    this.clear();\n    this.location = { page };\n\n    return this.loadPage(page)\n      .then((results) => {\n        this.pages = [];\n        this.parseResults(this.location.page, results);\n      })\n      .finally(() => {\n        this.initialLoading = false;\n        this.isRefreshing = false;\n      });\n  });\n\n  // 加载指定页\n  override(DiscussionListState.prototype, 'loadPage', function (original, page = 1) {\n    const reqParams = this.requestParams();\n    if (!this.optionInitialized) this.initOptions();\n\n    if (!this.lastRequestParams['include']) {\n      this.lastRequestParams = reqParams;\n    }\n\n    // 首屏预载\n    const preloadedDiscussions = app.preloadedApiDocument();\n    if (preloadedDiscussions) {\n      this.initialLoading = false;\n      this.isRefreshing = false;\n      this.totalDiscussionCount = Stream(preloadedDiscussions.payload.jsonapi.totalResultsCount);\n      this.lastTotalDiscussionCount = this.totalDiscussionCount();\n      return Promise.resolve(preloadedDiscussions);\n    }\n\n    // 本地缓存复用\n    if (!this.isRefreshing && this.options.cacheDiscussions) {\n      const includeChanged =\n        JSON.stringify(reqParams['include']) !== JSON.stringify(this.lastRequestParams['include']);\n      const filterChanged =\n        JSON.stringify(reqParams['filter']) !== JSON.stringify(this.lastRequestParams['filter']);\n      const sortChanged = reqParams['sort'] !== this.lastRequestParams['sort'];\n\n      if (!(includeChanged || filterChanged || sortChanged)) {\n        if (this.lastLoadedPage[page]) {\n          const start = this.options.perPage * (page - 1);\n          const end = this.options.perPage * page;\n          const results = this.lastDiscussions.slice(start, end);\n          results.payload = { jsonapi: { totalResultsCount: this.totalDiscussionCount() } };\n\n          // 让卡片视图在 cache 模式下也能正确重绘\n          this.initialLoading = true;\n          m.redraw();\n          return new Promise((resolve) => setTimeout(() => resolve(results), 50));\n        }\n      }\n    }\n\n    // 计算 offset/limit\n    const include = Array.isArray(reqParams.include) ? reqParams.include.join(',') : reqParams.include;\n\n    let newOffset, newLimit;\n    if (this.usePaginationMode) {\n      newOffset = this.options.perPage * (page - 1);\n      newLimit = this.options.perPage;\n    } else {\n      newOffset = this.options.perIndexInit * Math.min(page - 1, 1) + this.options.perLoadMore * Math.max(page - 2, 0);\n      newLimit = newOffset === 0 ? this.options.perIndexInit : this.options.perLoadMore;\n    }\n\n    const params = {\n      ...reqParams,\n      page: {\n        ...reqParams.page,\n        offset: newOffset,\n        limit: newLimit,\n      },\n      include,\n    };\n\n    return app.store.find(this.type, params);\n  });\n\n  // 兼容 walsgit-discussion-cards：把“拿所有 item/页”的语义纠正\n  override(DiscussionListState.prototype, 'getAllItems', function (original) {\n    if (!('walsgit-discussion-cards' in flarum.extensions)) return original();\n    return this.extraDiscussions.concat(\n      this.getPages(true).map((pg) => pg.items).flat()\n    );\n  });\n\n  override(DiscussionListState.prototype, 'getPages', function (original, getAllPages = false) {\n    const allPages = original();\n    if (!('walsgit-discussion-cards' in flarum.extensions)) return allPages;\n    if (getAllPages) return allPages;\n    return [allPages.find((page) => page.number === this.location.page)];\n  });\n\n  // 解析结果并更新分页状态\n  override(DiscussionListState.prototype, 'parseResults', function (original, pg, results) {\n    if (!this.usePaginationMode) {\n      return original(pg, results);\n    }\n    const pageNum = Number(pg);\n    const links = results.payload?.links || {};\n\n    const page = {\n      number: pageNum,\n      items: results,\n      hasNext: !!links?.next,\n      hasPrev: !!links?.prev,\n    };\n\n    this.hasPage = function (num) {\n      const all = this.getPages(true);\n      if (all.length === 0) return false;\n      return all.some((p) => p.number === num);\n    };\n\n    if (!this.hasPage(pageNum)) {\n      this.pages.push(page);\n    }\n\n    this.pages = this.pages.sort((a, b) => a.number - b.number);\n    this.location = { page: pageNum };\n\n    this.totalDiscussionCount = Stream(results.payload.jsonapi.totalResultsCount);\n\n    if (this.options.cacheDiscussions) {\n      if (\n        (this.lastTotalDiscussionCount !== this.totalDiscussionCount() && this.lastTotalDiscussionCount !== 0) ||\n        this.lastTotalDiscussionCount === 0 ||\n        this.isRefreshing\n      ) {\n        // 重置缓存\n        this.lastTotalDiscussionCount = this.totalDiscussionCount();\n        this.lastDiscussions = new Array(this.lastTotalDiscussionCount);\n        this.lastLoadedPage = {};\n      } else {\n        // 继续累积缓存\n        this.lastLoadedPage[pageNum] = page;\n        const start = this.options.perPage * (pageNum - 1);\n        const end = this.options.perPage * pageNum;\n        this.lastDiscussions.splice(start, end - start, ...results);\n      }\n    }\n\n    this.getTotalPages = function () {\n      return Math.ceil(this.totalDiscussionCount() / this.options.perPage);\n    };\n\n    this.page = Stream(page);\n    this.perPage = Stream(this.options.perPage);\n    this.totalPages = Stream(this.getTotalPages());\n\n    this.ctrl = {\n      scrollToTop: function () {\n        const container = document.querySelector('#content > .IndexPage > .container');\n        const header = document.querySelector('#header');\n        let offsetY = 0;\n        if (header) offsetY = header.clientHeight;\n        if (container) {\n          const targetPosition = container.getBoundingClientRect().top + window.scrollY - offsetY;\n          setTimeout(() => window.scrollTo({ top: targetPosition, behavior: 'smooth' }), 50);\n        }\n      }.bind(this),\n\n      prevPage: function () {\n        let current = this.page().number - 1;\n        if (current < 1) return;\n        this.page(current);\n        this.loadingPrev = true;\n        this.loadPage(current).then((r) => {\n          this.parseResults(current, r);\n          this.loadingPrev = false;\n          this.ctrl.scrollToTop();\n        });\n      }.bind(this),\n\n      nextPage: function () {\n        let current = this.page().number + 1;\n        if (current > this.totalPages()) {\n          current = this.totalPages();\n          return;\n        }\n        this.page(current);\n        this.loadingNext = true;\n        this.loadPage(current).then((r) => {\n          this.parseResults(current, r);\n          this.loadingNext = false;\n          this.ctrl.scrollToTop();\n        });\n      }.bind(this),\n\n      toPage: function (page) {\n        const target = Number(page);\n        if (this.page().number === target || target < 1 || target > this.totalPages()) return;\n        this.page(target);\n        this.initialLoading = true;\n        this.loadPage(target).then((r) => {\n          this.parseResults(target, r);\n          this.initialLoading = false;\n          this.ctrl.scrollToTop();\n        });\n      }.bind(this),\n\n      pageList: function () {\n        const p = [];\n        const left = Math.max(parseInt(this.page().number) - this.options.leftEdges, 1);\n        const right = Math.min(parseInt(this.page().number) + this.options.rightEdges, this.totalPages());\n        for (let i = left; i <= right; i++) p.push(i);\n        return p;\n      }.bind(this),\n    };\n\n    m.redraw();\n  });\n\n  // 新增/删除讨论的本地同步（分页模式）\n  override(DiscussionListState.prototype, 'addDiscussion', function (original, discussion) {\n    if (!this.usePaginationMode) return original();\n    const index = this.lastDiscussions.indexOf(discussion);\n    if (index !== -1) {\n      this.lastDiscussions.splice(index);\n      this.lastDiscussions.unshift(discussion);\n    } else {\n      this.lastDiscussions.unshift(discussion);\n      this.lastTotalDiscussionCount++;\n      this.totalDiscussionCount(this.lastTotalDiscussionCount);\n    }\n    m.redraw();\n  });\n\n  override(DiscussionListState.prototype, 'deleteDiscussion', function (original, discussion) {\n    if (!this.usePaginationMode) return original();\n    const index = this.lastDiscussions.indexOf(discussion);\n    if (index !== -1) {\n      this.lastDiscussions.splice(index);\n      this.lastTotalDiscussionCount--;\n      this.totalDiscussionCount(this.lastTotalDiscussionCount);\n    }\n    m.redraw();\n  });\n\n  // 清理状态\n  override(DiscussionListState.prototype, 'clear', function (original) {\n    if (!this.usePaginationMode) return original();\n    this.lastDiscussions = [];\n    this.lastLoadedPage = {};\n    this.lastRequestParams = {};\n    this.lastTotalDiscussionCount = 0;\n    this.lastTotalPages = 0;\n    this.totalDiscussionCount = Stream(0);\n    return original();\n  });\n}\n","import app from 'flarum/forum/app';\n\nexport default function () {\n  if (app.session.user === null) {\n    return app.forum.attribute('foskym-pagination.paginationOnLoading');\n  }\n\n  const preferences = app.session.user.preferences() as any;\n\n  if (app.forum.attribute('foskym-pagination.canUserPref')) {\n    if (!preferences['foskym-pagination.userCustom']) {\n      return app.forum.attribute('foskym-pagination.paginationOnLoading');\n    } else {\n      if (!preferences['foskym-pagination.userPaginationOnLoading']) {\n        return false;\n      }\n    }\n  } else {\n    return app.forum.attribute('foskym-pagination.paginationOnLoading');\n  }\n\n  return true;\n}\n","import app from 'flarum/common/app';\nimport { override } from 'flarum/common/extend';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport Toolbar from './components/Toolbar';\n\n/**\n * 最小修补：\n * - 保留 original() 返回的整棵树，让其它扩展（含 Realtime）挂钩仍然生效\n * - 仅替换 <ul.DiscussionList-discussions> 这一块的内容\n * - 在上/下插入分页工具条，而不是清空 children\n */\nexport default function () {\n  override(DiscussionList.prototype, 'view', function (original) {\n    const state = this.attrs.state;\n\n    // 未启用分页：完全走原生视图（含 Realtime 的挂钩）\n    if (!state?.usePaginationMode) {\n      return original();\n    }\n\n    const isLoading = state.isLoading();\n    const params = state.getParams();\n    const position = app.forum.attribute('foskym-pagination.paginationPosition');\n    const pageSize = state.options.perPage;\n    const pageNum = state.page;\n\n    // 拿到原始树，后续在其中“定点替换”列表节点\n    const tree = original();\n\n    // 生成分页模式下应显示的 <ul>（或占位/加载态）\n    let replacementVNode;\n\n    if (state.isEmpty()) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      replacementVNode = <Placeholder text={text} />;\n    } else if (isLoading) {\n      replacementVNode = (\n        <>\n          <ul role=\"feed\" aria-busy={true} className=\"DiscussionList-discussions\" />\n          <div className=\"DiscussionList-loadMore\">\n            <LoadingIndicator />\n          </div>\n        </>\n      );\n    } else {\n      const pages = state.getPages(); // 在 state 补丁里已适配“只取当前页”\n      let items = [];\n      for (let i = 0; i < pages.length; i++) {\n        if (pages[i].number === state.location.page) {\n          items = pages[i].items;\n          break;\n        }\n      }\n      replacementVNode = (\n        <ul role=\"feed\" aria-busy={false} className=\"DiscussionList-discussions\">\n          {items.map((discussion, itemNum) => (\n            <li\n              key={discussion.id()}\n              data-id={discussion.id()}\n              role=\"article\"\n              aria-setsize=\"-1\"\n              aria-posinset={pageNum * pageSize + itemNum}\n            >\n              <DiscussionListItem discussion={discussion} params={params} />\n            </li>\n          ))}\n        </ul>\n      );\n    }\n\n    // 兼容 walsgit-discussion-cards：不裁剪 original 的 children，直接在上下追加工具条\n    const cardSupport = 'walsgit-discussion-cards' in flarum.extensions;\n\n    // 把 original() 的顶层 <div.DiscussionList ...> 取出来\n    const outer = tree;\n    const outerClass = classList(\n      'DiscussionList',\n      { 'DiscussionList--searchResults': state.isSearchResults() },\n      outer.attrs?.className\n    );\n\n    // 在原始 children 里查找/替换 <ul.DiscussionList-discussions>；找不到则追加\n    const kids = Array.isArray(outer.children) ? outer.children.slice() : [];\n    let replaced = false;\n\n    // 简单匹配器：匹配 ul.DiscussionList-discussions（或原来就没有 ul 时追加）\n    for (let i = 0; i < kids.length; i++) {\n      const c = kids[i];\n      if (c && c.tag === 'ul' && c.attrs && String(c.attrs.className || '').includes('DiscussionList-discussions')) {\n        kids[i] = replacementVNode;\n        replaced = true;\n        break;\n      }\n    }\n    if (!replaced) kids.push(replacementVNode);\n\n    // 在上/下插入分页工具条\n    const toolbarAbove = (position === 'above' || position === 'both') ? Toolbar.component({ state }) : null;\n    const toolbarUnder = (position === 'under' || position === 'both') ? Toolbar.component({ state }) : null;\n\n    // 拼接最终 children（保持原有顺序，避免清空导致其它扩展节点丢失）\n    const finalChildren = [];\n    if (toolbarAbove) finalChildren.push(toolbarAbove);\n    finalChildren.push(...kids);\n    if (toolbarUnder) finalChildren.push(toolbarUnder);\n\n    return (\n      <div className={outerClass} attrs={outer.attrs}>\n        {finalChildren}\n      </div>\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_extends","assign","bind","target","i","arguments","length","source","apply","this","_setPrototypeOf","p","setPrototypeOf","__proto__","Toolbar","subClass","superClass","attrs","create","constructor","view","vnode","state","className","class","buttonFirst","buttonBack","ctrl","pageList","map","page","title","number","onclick","toPage","buttonNext","buttonLast","inputJump","buttonJump","Button","icon","disabled","parseInt","totalPages","JumpFunc","input","document","getElementById","Number","isFinite","isSafeInteger","m","id","placeholder","undefined","onkeydown","event","redraw","keyCode","Component","app","extend","SettingsPage","preferences","user","userCustom","Stream","userPaginationOnLoading","items","Boolean","add","FieldSet","label","Pagination_UserPrefItems","toArray","ItemList","Switch","onchange","UserCustom_Loading","savePreferences","then","loading","userPaginationOnLoading_Loading","DiscussionListState","options","cacheDiscussions","perPage","perLoadMore","perIndexInit","leftEdges","rightEdges","usePaginationMode","determineMode","lastTotalDiscussionCount","lastTotalPages","lastDiscussions","lastLoadedPage","lastRequestParams","optionInitialized","override","original","params","location","ret","refresh","Promise","resolve","initOptions","initialLoading","loadingPrev","loadingNext","isRefreshing","clear","loadPage","results","pages","parseResults","pageSize","reqParams","requestParams","preloadedDiscussions","totalDiscussionCount","payload","jsonapi","totalResultsCount","includeChanged","JSON","stringify","filterChanged","sortChanged","start","end","slice","setTimeout","newOffset","newLimit","include","Array","isArray","join","Math","min","max","offset","limit","type","extensions","extraDiscussions","concat","getPages","pg","flat","getAllPages","allPages","find","pageNum","links","hasNext","next","hasPrev","prev","hasPage","num","all","some","push","sort","b","splice","getTotalPages","ceil","scrollToTop","container","querySelector","header","offsetY","clientHeight","targetPosition","getBoundingClientRect","top","window","scrollY","scrollTo","behavior","prevPage","current","r","nextPage","left","right","discussion","index","indexOf","unshift","DiscussionList","replacementVNode","isLoading","getParams","position","tree","isEmpty","text","role","itemNum","outer","outerClass","classList","isSearchResults","kids","children","replaced","c","tag","String","includes","toolbarAbove","component","toolbarUnder","finalChildren","DiscussionControls","DiscussionComposer"],"sourceRoot":""}